# 10-point Gauss-Legendre nodes and weights (on [-1,1])
const GL10_nodes = [
   -0.9739065285171717,
   -0.8650633666889845,
   -0.6794095682990244,
   -0.4333953941292472,
   -0.1488743389816312,
    0.1488743389816312,
    0.4333953941292472,
    0.6794095682990244,
    0.8650633666889845,
    0.9739065285171717
]

const GL10_weights = [
    0.0666713443086881,
    0.1494513491505806,
    0.2190863625159820,
    0.2692667193099963,
    0.2955242247147529,
    0.2955242247147529,
    0.2692667193099963,
    0.2190863625159820,
    0.1494513491505806,
    0.0666713443086881
]

const GL12_nodes = [
    -0.1252334085114689,
     0.1252334085114689,
    -0.3678314989981802,
     0.3678314989981802,
    -0.5873179542866175,
     0.5873179542866175,
    -0.7699026741943047,
     0.7699026741943047,
    -0.9041172563704749,
     0.9041172563704749,
    -0.9815606342467192,
     0.9815606342467192
]

const GL12_weights = [
    0.2491470458134028,
    0.2491470458134028,
    0.2334925365383548,
    0.2334925365383548,
    0.2031674267230659,
    0.2031674267230659,
    0.1600783285433462,
    0.1600783285433462,
    0.1069393259953184,
    0.1069393259953184,
    0.0471753363865118,
    0.0471753363865118
]

const GL14_nodes = [
    -0.1080549487073437,
     0.1080549487073437,
    -0.3191123689278897,
     0.3191123689278897,
    -0.5152486363581541,
     0.5152486363581541,
    -0.6872929048116855,
     0.6872929048116855,
    -0.8272013150697650,
     0.8272013150697650,
    -0.9284348836635735,
     0.9284348836635735,
    -0.9862838086968123,
     0.9862838086968123
]

const GL14_weights = [
    0.2152638534631578,
    0.2152638534631578,
    0.2051984637212956,
    0.2051984637212956,
    0.1855383974779378,
    0.1855383974779378,
    0.1572031671581935,
    0.1572031671581935,
    0.1215185706879032,
    0.1215185706879032,
    0.0801580871597602,
    0.0801580871597602,
    0.0351194603317519,
    0.0351194603317519
]

# store all supported rules in a dictionary
const GL_rules = Dict(
    10 => (GL10_nodes, GL10_weights),
    12 => (GL12_nodes, GL12_weights),
    14 => (GL14_nodes, GL14_weights)
)

function cdf_legendre(x::Float64; n::Int=10)
    # check if rule exists
    haskey(GL_rules, n) || error("Gauss–Legendre rule for n=$n not available. Choose from: $(collect(keys(GL_rules)))")

    nodes, weights = GL_rules[n]

    # symmetry: reduce to positive x
    if x < 0
        return 1.0 - cdf_legendre(-x; n=n)
    end

    # apply n-point Gauss–Legendre quadrature on [0,x]
    s = 0.0
    for i in 1:n
        u = nodes[i]
        t = 0.5 * x * (u + 1)  # map [-1,1] → [0,x]
        s += weights[i] * exp(-t^2 / 2)
    end
    integral = 0.5 * x * s
    return 0.5 + integral / sqrt(2π)
end